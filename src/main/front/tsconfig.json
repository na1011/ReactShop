{
  "compilerOptions": {
    "target": "es5",                        // 컴파일된 JavaScript의 버전을 설정합니다. ES5는 대부분의 브라우저에서 지원됩니다.
    "lib": ["dom", "dom.iterable", "esnext"], // 사용할 라이브러리의 타입 정의를 설정합니다. 여기서는 DOM API와 ESNext 기능을 포함합니다.
    "allowJs": true,                        // JavaScript 파일도 TypeScript 컴파일러가 처리하도록 허용합니다.
    "skipLibCheck": true,                   // 타입 정의 파일의 검사를 건너뜁니다. 컴파일 속도를 높이기 위해 사용됩니다.
    "esModuleInterop": true,                // CommonJS와 ES Modules 간의 호환성을 활성화합니다.
    "allowSyntheticDefaultImports": true,   // ES Modules에서 default import를 허용합니다.
    "strict": true,                         // 모든 엄격한 타입 검사 옵션을 활성화합니다.
    "forceConsistentCasingInFileNames": true, // 파일 이름의 대소문자를 일관되게 강제합니다.
    "noFallthroughCasesInSwitch": true,     // switch 문에서 명시적으로 case를 빠져나가도록 강제합니다.
    "module": "esnext",                     // 모듈 시스템을 ESNext로 설정합니다.
    "moduleResolution": "node",             // 모듈 해석을 Node.js 스타일로 설정합니다.
    "resolveJsonModule": true,              // TypeScript에서 JSON 모듈을 가져올 수 있게 합니다.
    "isolatedModules": true,                // 각 파일을 개별 모듈로 컴파일하도록 강제합니다.
    "noEmit": true,                         // 컴파일 시 실제로 파일을 생성하지 않도록 합니다.
    "jsx": "react-jsx",                     // JSX를 React JSX로 컴파일합니다.
    "baseUrl": "./src",                     // 모듈을 찾기 위한 기본 경로를 설정합니다.
    "outDir": "./dist",                     // 출력 디렉토리를 설정합니다.
    "rootDir": "./src",                     // 루트 디렉토리를 설정합니다.
    "typeRoots": ["node_modules/@types", "src/types"],// 타입 정의 파일을 검색할 디렉토리 경로를 설정합니다.
  },
  "include": ["src/**/*", ".eslintrc.js"], // 컴파일 대상 파일을 포함합니다.
  "exclude": ["node_modules"]
}